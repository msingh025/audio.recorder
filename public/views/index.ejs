<!DOCTYPE html>
<html>
  <head>
    <title>audio.record</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
    <script src="./lib/binary.js"></script>
    <script src="//www.WebRTC-Experiment.com/RecordRTC.js"></script>
    <script type="text/javascript">
	var client = new BinaryClient('ws://localhost:3000/binary-endpoint');
	client.on('open', function() {
		   console.info('client is open');
	  // for the sake of this example let's put the stream in the window
	  window.Stream = client.createStream();
	var session = {
	  audio: true,
	  video: false
	};
	var recordRTC = null;
	navigator.getUserMedia(session, initializeRecorder, onError);
	function onError(e) {
	  console.error(e);
	}  	  
	});
	
	function initializeRecorder(stream) {
	  var audioContext = window.AudioContext;
	  var context = new audioContext();
	  var audioInput = context.createMediaStreamSource(stream);
	  var bufferSize = 256;
	  // create a javascript node
	  //var recorder = context.createJavaScriptNode(bufferSize, 1, 1);
	  var recorder = context.createScriptProcessor(bufferSize, 1, 1)
	  // specify the processing function
	  recorder.onaudioprocess = recorderProcess;
	  // connect stream to our recorder
	  audioInput.connect(recorder);
	  // connect our recorder to the previous destination
	  recorder.connect(context.destination);
	}
	function convertFloat32ToInt16(buffer) {
	  l = buffer.length;
	  buf = new Int16Array(l);
	  while (l--) {
		buf[l] = Math.min(1, buffer[l])*0x7FFF;
	  }
	  return buf.buffer;
	}

	function recorderProcess(e) {
	  //var left = e.inputBuffer.getChannelData(0);
	  var left = e.inputBuffer.getChannelData(0);
	  //console.log(left);
	  window.Stream.write(convertFloat32ToInt16(left));
	}

    </script>
  </head>
<body>
   <my-app>Loading...</my-app>
   
</body>
</html>
</html>